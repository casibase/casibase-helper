name: Release

on:
  push:
    branches:
      - master

jobs:
  version:
    runs-on: ubuntu-latest
    outputs:
      new_version: ${{ steps.setver.outputs.version }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
      - run: yarn global add semantic-release@17.4.4 @semantic-release/commit-analyzer @semantic-release/release-notes-generator @semantic-release/git @semantic-release/github

      - name: Bump version
        id: setver
        run: |
          VERSION=$(semantic-release --no-ci --dry-run | grep -oP "The next release version is \K[0-9]+\.[0-9]+\.[0-9]+")
          echo "version=$VERSION" >> $GITHUB_OUTPUT
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  
  build:
    needs: version
    name: Build & Release
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: yarn

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Update package.json version
        if: needs.version.outputs.new_version != ''
        run: |
          yarn version --new-version ${{ needs.version.outputs.new_version }} --no-git-tag-version

      - name: Build React renderer(Webpack)
        run: yarn build

      - name: Build Electron App
        run: yarn electron-builder --config electron-builder.yml
      
      - name: Upload platform artifact
        uses: actions/upload-artifact@v4
        with:
          name: "electron-${{ matrix.os }}"
          path: release/*

  release:
    name: Create GitHub Release
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Download Windows artifact
        uses: actions/download-artifact@v4
        with:
          name: electron-windows-latest
          path: release/windows

      - name: Download macOS artifact
        uses: actions/download-artifact@v4
        with:
          name: electron-macos-latest
          path: release/macos

      - name: Download Linux artifact
        uses: actions/download-artifact@v4
        with:
          name: electron-ubuntu-latest
          path: release/linux
      
      - name: move assets
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          mkdir -p release
          cp -r release/windows/* release/
          cp -r release/macos/* release/
          cp -r release/linux/* release/

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Release
        run: yarn global add semantic-release@17.4.4 @semantic-release/commit-analyzer @semantic-release/release-notes-generator @semantic-release/git @semantic-release/github && semantic-release
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
